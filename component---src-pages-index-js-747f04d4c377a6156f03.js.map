{"version":3,"file":"component---src-pages-index-js-747f04d4c377a6156f03.js","mappings":"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","sources":["webpack://planner/./src/components/PortalOverlay.jsx","webpack://planner/./src/pages/index.js"],"sourcesContent":["import React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nconst PortalOverlay = ({ children, isRendering }) => {\n  // Use a ref to ensure the same div is used for the portal container\n  const elRef = typeof document !== \"undefined\" ? React.useRef(document.createElement(\"div\")) : null;\n\n  React.useEffect(() => {\n    const portalRoot = document.getElementById(\"portal-root\");\n    if (!portalRoot) return;\n    portalRoot.appendChild(elRef.current);\n\n    // Cleanup function to remove the appended child\n    return () => {\n      portalRoot.removeChild(elRef.current);\n    };\n  }, []);\n\n  return (\n    isRendering &&\n    ReactDOM.createPortal(\n      <div className=\"overlay top-0 bg-[rgba(247,247,247,0.3)]\" style={{ position: \"fixed\", width: \"100vw\", height: \"100vh\" }}>\n        {children}\n      </div>,\n      elRef.current\n    )\n  );\n};\n\nexport default PortalOverlay;\n","import React, { useEffect, useState } from \"react\";\nimport { useContext } from \"react\";\nimport Navbar from \"../components/Navbar\";\n// import { useTheme } from \"../context/ThemeContext\";\nimport { Link } from \"gatsby\";\nimport axios from \"axios\";\nimport { IoIosAdd } from \"react-icons/io\";\nimport { MdDeleteOutline } from \"react-icons/md\";\nimport PortalOverlay from \"../components/PortalOverlay\";\nimport { setupDatabaseAndGetKeys, addOutlineToStore, deleteDataFromStore } from \"../utils/indexedDB\";\n\n//Will get the projects from files later\n\nconst IndexPage = () => {\n  const [outlinesJSON, setOutlinesJSON] = useState([]);\n  const [outlinesDB, setOutlinesDB] = useState([]);\n  const [addWindow, setAddWindow] = useState(false);\n  const [inputValue, setInputValue] = useState(\"\");\n  const [serverError, setServerError] = useState(false);\n\n  // Get all the JSON files / file names\n  useEffect(() => {\n    const initFunc = async () => {\n      try {\n        const { data } = await axios.get(\"http://localhost:3240/api/outline-list\");\n\n        await setOutlinesJSON(data);\n      } catch (err) {\n        await setupDatabaseAndGetKeys()\n          .then((storeNames) => {\n            setOutlinesDB(storeNames);\n          })\n          .catch((error) => console.error(\"Error setting up the database:\", error));\n      }\n    };\n    initFunc();\n\n    // setServerError(true);\n    // IF this error throws we are firing from IndexedDB\n\n    // console.error(\"Error:\", error);\n  }, []);\n\n  const handleAddOutline = async (e) => {\n    setInputValue(\"\");\n    setAddWindow(false);\n    try {\n      const response = await axios.post(\"http://localhost:3240/api/outline\", { name: inputValue });\n      const { completed, message } = response.data;\n      // console.log(message, completed);\n      if (!completed) {\n        const bool = confirm(`${inputValue} already exists would you like to write over this file?`);\n        if (bool) {\n          await axios.post(\"http://localhost:3240/api/outline\", { name: inputValue, override: true });\n        }\n      }\n      const { data } = await axios.get(\"http://localhost:3240/api/outline-list\");\n      setOutlinesJSON(data);\n    } catch (err) {\n      //If our backend isnt set up we are storing to indexedDB\n      addOutlineToStore(inputValue)\n        .then((uid) => {\n          // console.log(\"Store added successfully\");\n          setOutlinesDB((prev) => [...prev, { title: inputValue, _id: uid }]);\n        })\n        .catch((error) => {\n          console.error(\"Error adding store:\", error);\n        });\n    }\n  };\n\n  const handleDelete = async (delId) => {\n    const res = confirm(\"Are you sure you want to delete?\");\n    if (!res) return;\n    try {\n      await axios.delete(\"http://localhost:3240/api/outline\", { params: { delId } });\n      await setOutlinesJSON((prevOutlines) => prevOutlines.filter((item) => item._id !== delId));\n    } catch (err) {\n      deleteDataFromStore(delId)\n        .then(() => {\n          console.log(\"Key deleted successfully\");\n          setOutlinesDB((prevOutlines) => prevOutlines.filter((item) => item._id !== delId));\n        })\n        .catch((error) => console.error(\"Error deleting key:\", error));\n      console.log(\"Error\", err);\n    }\n  };\n\n  return (\n    <main>\n      <Navbar />\n      <button onClick={() => setAddWindow((aw) => !aw)} className=\" bg-[var(--secondary-color)] ml-10 mt-4 border border-[2px] border-[var(--secondary-text)] rounded-xl\">\n        <IoIosAdd className=\"fill-[var(--secondary-text)]\" size={\"3rem\"} />\n      </button>\n      <PortalOverlay isRendering={addWindow}>\n        <div className=\"rounded border border-2 border-[var(--primary-text)]  primary container md:max-w-2xl mx-auto mt-32\">\n          <div className=\"relative cursor-pointer\" onClick={() => setAddWindow(false)}>\n            <IoIosAdd className=\"fill-[var(--accent-text)] rotate-45 absolute right-0 top-0 fill-[var(--secondary-text)]\" size={\"3rem\"} />\n          </div>\n          <div className=\"flex justify-center items-center min-h-[15rem]\">\n            <div className=\"flex flex-col\">\n              <label className=\"text-3xl mb-3 font-semibold text-white\" htmlFor=\"outline-name\">\n                Create Outline\n              </label>\n              <div className=\"flex\">\n                <input\n                  name=\"outline-name\"\n                  value={inputValue}\n                  onChange={(e) => setInputValue(e.target.value)}\n                  className=\"text-xl h-10 text-black min-w-[20rem] rounded px-2\"\n                  placeholder=\"Outline Name\"\n                ></input>\n                <button className=\"accent rounded h-10 w-10 flex justify-center items-center\" onClick={handleAddOutline}>\n                  <IoIosAdd className=\"fill-[var(--accent-text)] \" size={\"2rem\"} />\n                </button>\n              </div>\n            </div>\n          </div>\n        </div>\n      </PortalOverlay>\n      <div className=\"gap-4 grid px-8 pt-4 container xl:max-w-7xl mx-auto\">\n        {outlinesJSON.length > 0\n          ? outlinesJSON.map((name, i) => {\n              return (\n                <div key={i} className=\"relative outline-cont hover:scale-[1.05] duration-100 ease-linear\">\n                  <button className=\"absolute top-2 right-3 z-[1] hover:outline hover:outline-2 rounded\" onClick={() => handleDelete(name)}>\n                    <MdDeleteOutline size={\"2rem\"} />\n                  </button>\n                  <Link to={\"/outline/\" + name} key={name}>\n                    <div className=\"bg-[var(--third-color)] border border-[var(--third-text)] text-[var(--third-text)] p-8 flex items-center rounded-lg \">\n                      <h1 className=\"text-4xl\">{name}</h1>\n                    </div>\n                  </Link>\n                </div>\n              );\n            })\n          : outlinesDB.map(({ title, _id }, i) => {\n              return (\n                <div key={i} className=\"relative outline-cont hover:scale-[1.05] duration-100 ease-linear\">\n                  <button className=\"absolute top-2 right-3 z-[1] hover:outline hover:outline-2 rounded\" onClick={() => handleDelete(_id)}>\n                    <MdDeleteOutline size={\"2rem\"} />\n                  </button>\n                  <Link to={\"/outline/\" + _id} key={title}>\n                    <div className=\"bg-[var(--third-color)] border border-[var(--third-text)] text-[var(--third-text)] p-8 flex items-center rounded-lg \">\n                      <h1 className=\"text-4xl\">{title}</h1>\n                    </div>\n                  </Link>\n                </div>\n              );\n            })}\n      </div>\n      {serverError && <h1 className=\"background text-4xl w-full text-center\">Ruh Roh Server took a dump...</h1>}\n    </main>\n  );\n};\n\nexport default IndexPage;\n\nexport const Head = () => <title>Outline App</title>;\n"],"names":["children","isRendering","elRef","document","React","createElement","portalRoot","getElementById","appendChild","current","removeChild","ReactDOM","className","style","position","width","height","outlinesJSON","setOutlinesJSON","useState","outlinesDB","setOutlinesDB","addWindow","setAddWindow","inputValue","setInputValue","serverError","setServerError","useEffect","async","data","axios","get","err","setupDatabaseAndGetKeys","then","storeNames","catch","error","console","initFunc","handleDelete","confirm","delete","params","delId","prevOutlines","filter","item","_id","deleteDataFromStore","log","Navbar","onClick","aw","size","htmlFor","name","value","onChange","e","target","placeholder","response","post","completed","message","override","addOutlineToStore","uid","prev","title","length","map","i","key","Link","to","Head"],"sourceRoot":""}