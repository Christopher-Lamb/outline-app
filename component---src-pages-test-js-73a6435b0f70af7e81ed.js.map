{"version":3,"file":"component---src-pages-test-js-73a6435b0f70af7e81ed.js","mappings":"8JAGA,MAkEMA,EAAQ,IAAgB,IAAf,MAAEC,GAAO,EACtB,OACE,uBAAKC,MAAO,CAAEC,WAAW,QAASF,EAAK,gBAAkBG,UAAU,2DACjE,0BAAKH,GACD,EAIV,UA9BiB,IAEb,uBAAKG,UAAU,IACZ,CAAC,EAAG,IAAK,KAAKC,KAAKC,IAClB,MAAM,OAAEC,EAAM,OAAEC,GAjBG,EAACC,EAAQC,KAElC,IAAIH,EAASE,EAASC,EAClBF,EAASC,EAASC,EAOtB,OANIH,EAAS,MACXA,GAAkB,KAEhBC,EAAS,IACXA,EAAS,IAAMA,GAEV,CAAED,SAAQC,SAAQ,EAOQG,CAAmBL,EAAK,IACnD,IAAIM,EAAW,CAACL,EAAQC,GAExB,OADAK,QAAQC,IAAIF,GAEV,uBAAKR,UAAU,gCACb,gBAACJ,EAAK,CAACC,MAAOK,IACd,uBAAKF,UAAU,gCACZQ,EAASP,KAAI,CAACU,EAAKC,IACX,gBAAChB,EAAK,CAACC,MAAOc,OAGrB,KAiBT,MAAME,EAAO,IAAM,6BAAO,Y","sources":["webpack://planner/./src/pages/test.js"],"sourcesContent":["import React from \"react\";\n\n// Tweak it in such a way that you are adding to the base color\nconst colors = [0];\n// const colors = [\n//   [255, 0, 0],\n//   [255, 127, 0],\n//   [255, 255, 0],\n//   [127, 255, 0],\n//   [0, 255, 0],\n//   [0, 255, 127],\n//   [0, 255, 255],\n//   [0, 127, 255],\n//   [0, 0, 255],\n//   [127, 0, 255],\n//   [255, 0, 255],\n//   [255, 0, 127],\n//   [255, 0, 0],\n//   [255, 127, 0],\n//   [255, 255, 0],\n//   [127, 255, 0],\n//   [0, 255, 0],\n//   [0, 255, 127],\n//   [0, 255, 255],\n//   [0, 127, 255],\n//   [0, 0, 255],\n//   [127, 0, 255],\n//   [255, 0, 255],\n//   [255, 0, 127],\n// ];\n\n//reciev parent color and take the deviation if that color number based on the depth\n\n//Takes a number and adds subtracts 10 from it\nconst getCircularNumbers = (number, factor) => {\n  //To get child colors\n  let addNum = number + factor;\n  let subNum = number - factor;\n  if (addNum > 360) {\n    addNum = addNum - 360;\n  }\n  if (subNum < 0) {\n    subNum = 360 + subNum;\n  }\n  return { addNum, subNum };\n};\n\nconst TestPage = () => {\n  return (\n    <div className=\"\">\n      {[0, 120, 240].map((num) => {\n        const { addNum, subNum } = getCircularNumbers(num, 30);\n        let children = [addNum, subNum];\n        console.log(children);\n        return (\n          <div className=\"flex flex-col max-w-3xl mt-3\">\n            <Block color={num} />\n            <div className=\"flex w-full flex-wrap gaps-4\">\n              {children.map((box, i) => {\n                return <Block color={box} />;\n              })}\n            </div>\n          </div>\n        );\n      })}\n    </div>\n  );\n};\n\nconst Block = ({ color }) => {\n  return (\n    <div style={{ background: `hsl( ${color}, 100%, 50%)` }} className=\"w-full h-4 flex items-center text-[#000] justify-center\">\n      <h1>{color}</h1>\n    </div>\n  );\n};\n\nexport default TestPage;\n\nexport const Head = () => <title>Test Page</title>;\n"],"names":["Block","color","style","background","className","map","num","addNum","subNum","number","factor","getCircularNumbers","children","console","log","box","i","Head"],"sourceRoot":""}